// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: vanasheet.proto

package vanasheetpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// by repeateing this message, to get 2D array
type RawRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vals []*structpb.Value `protobuf:"bytes,1,rep,name=vals,proto3" json:"vals,omitempty"`
}

func (x *RawRow) Reset() {
	*x = RawRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawRow) ProtoMessage() {}

func (x *RawRow) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawRow.ProtoReflect.Descriptor instead.
func (*RawRow) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{0}
}

func (x *RawRow) GetVals() []*structpb.Value {
	if x != nil {
		return x.Vals
	}
	return nil
}

// Smart Types - Vanasheet will try to understand this according to definition
type AppendRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpreadsheetId string           `protobuf:"bytes,1,opt,name=spreadsheet_id,json=spreadsheetId,proto3" json:"spreadsheet_id,omitempty"`
	Sheetname     string           `protobuf:"bytes,2,opt,name=sheetname,proto3" json:"sheetname,omitempty"`
	Row           *structpb.Struct `protobuf:"bytes,3,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *AppendRowRequest) Reset() {
	*x = AppendRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRowRequest) ProtoMessage() {}

func (x *AppendRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRowRequest.ProtoReflect.Descriptor instead.
func (*AppendRowRequest) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{1}
}

func (x *AppendRowRequest) GetSpreadsheetId() string {
	if x != nil {
		return x.SpreadsheetId
	}
	return ""
}

func (x *AppendRowRequest) GetSheetname() string {
	if x != nil {
		return x.Sheetname
	}
	return ""
}

func (x *AppendRowRequest) GetRow() *structpb.Struct {
	if x != nil {
		return x.Row
	}
	return nil
}

type AppendRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row *structpb.Struct `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *AppendRowResponse) Reset() {
	*x = AppendRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRowResponse) ProtoMessage() {}

func (x *AppendRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRowResponse.ProtoReflect.Descriptor instead.
func (*AppendRowResponse) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{2}
}

func (x *AppendRowResponse) GetRow() *structpb.Struct {
	if x != nil {
		return x.Row
	}
	return nil
}

// Raw Message - Client is responsible for the correctness of using this
type RawReadQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpreadsheetId string `protobuf:"bytes,1,opt,name=spreadsheet_id,json=spreadsheetId,proto3" json:"spreadsheet_id,omitempty"`
	A1Range       string `protobuf:"bytes,2,opt,name=a1range,proto3" json:"a1range,omitempty"`
	Query         string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *RawReadQueryRequest) Reset() {
	*x = RawReadQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawReadQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawReadQueryRequest) ProtoMessage() {}

func (x *RawReadQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawReadQueryRequest.ProtoReflect.Descriptor instead.
func (*RawReadQueryRequest) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{3}
}

func (x *RawReadQueryRequest) GetSpreadsheetId() string {
	if x != nil {
		return x.SpreadsheetId
	}
	return ""
}

func (x *RawReadQueryRequest) GetA1Range() string {
	if x != nil {
		return x.A1Range
	}
	return ""
}

func (x *RawReadQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type RawReadQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*RawRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RawReadQueryResponse) Reset() {
	*x = RawReadQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawReadQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawReadQueryResponse) ProtoMessage() {}

func (x *RawReadQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawReadQueryResponse.ProtoReflect.Descriptor instead.
func (*RawReadQueryResponse) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{4}
}

func (x *RawReadQueryResponse) GetRows() []*RawRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type RawAppendRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpreadsheetId string    `protobuf:"bytes,1,opt,name=spreadsheet_id,json=spreadsheetId,proto3" json:"spreadsheet_id,omitempty"`
	Sheetname     string    `protobuf:"bytes,2,opt,name=sheetname,proto3" json:"sheetname,omitempty"`
	Rows          []*RawRow `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RawAppendRowsRequest) Reset() {
	*x = RawAppendRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawAppendRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawAppendRowsRequest) ProtoMessage() {}

func (x *RawAppendRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawAppendRowsRequest.ProtoReflect.Descriptor instead.
func (*RawAppendRowsRequest) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{5}
}

func (x *RawAppendRowsRequest) GetSpreadsheetId() string {
	if x != nil {
		return x.SpreadsheetId
	}
	return ""
}

func (x *RawAppendRowsRequest) GetSheetname() string {
	if x != nil {
		return x.Sheetname
	}
	return ""
}

func (x *RawAppendRowsRequest) GetRows() []*RawRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type RawAppendRowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*RawRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RawAppendRowsResponse) Reset() {
	*x = RawAppendRowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vanasheet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawAppendRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawAppendRowsResponse) ProtoMessage() {}

func (x *RawAppendRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vanasheet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawAppendRowsResponse.ProtoReflect.Descriptor instead.
func (*RawAppendRowsResponse) Descriptor() ([]byte, []int) {
	return file_vanasheet_proto_rawDescGZIP(), []int{6}
}

func (x *RawAppendRowsResponse) GetRows() []*RawRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_vanasheet_proto protoreflect.FileDescriptor

var file_vanasheet_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x06,
	0x52, 0x61, 0x77, 0x52, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x76, 0x61,
	0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x70, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x03,
	0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0x3e, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x03,
	0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0x6c, 0x0a, 0x13, 0x52, 0x61, 0x77, 0x52, 0x65,
	0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x31, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x31, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x3f, 0x0a, 0x14, 0x52, 0x61, 0x77, 0x52, 0x65, 0x61, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61,
	0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x77, 0x41, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62,
	0x2e, 0x52, 0x61, 0x77, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x40, 0x0a,
	0x15, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x70, 0x62, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x32,
	0x8a, 0x02, 0x0a, 0x09, 0x56, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x12, 0x55, 0x0a,
	0x0c, 0x52, 0x61, 0x77, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x2e,
	0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x77, 0x52,
	0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x21, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x61, 0x6e, 0x61, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x1d, 0x2e, 0x76, 0x61,
	0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x61, 0x6e,
	0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x6e, 0x61, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x2f, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x61, 0x6e, 0x61, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vanasheet_proto_rawDescOnce sync.Once
	file_vanasheet_proto_rawDescData = file_vanasheet_proto_rawDesc
)

func file_vanasheet_proto_rawDescGZIP() []byte {
	file_vanasheet_proto_rawDescOnce.Do(func() {
		file_vanasheet_proto_rawDescData = protoimpl.X.CompressGZIP(file_vanasheet_proto_rawDescData)
	})
	return file_vanasheet_proto_rawDescData
}

var file_vanasheet_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_vanasheet_proto_goTypes = []interface{}{
	(*RawRow)(nil),                // 0: vanasheetpb.RawRow
	(*AppendRowRequest)(nil),      // 1: vanasheetpb.AppendRowRequest
	(*AppendRowResponse)(nil),     // 2: vanasheetpb.AppendRowResponse
	(*RawReadQueryRequest)(nil),   // 3: vanasheetpb.RawReadQueryRequest
	(*RawReadQueryResponse)(nil),  // 4: vanasheetpb.RawReadQueryResponse
	(*RawAppendRowsRequest)(nil),  // 5: vanasheetpb.RawAppendRowsRequest
	(*RawAppendRowsResponse)(nil), // 6: vanasheetpb.RawAppendRowsResponse
	(*structpb.Value)(nil),        // 7: google.protobuf.Value
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
}
var file_vanasheet_proto_depIdxs = []int32{
	7, // 0: vanasheetpb.RawRow.vals:type_name -> google.protobuf.Value
	8, // 1: vanasheetpb.AppendRowRequest.row:type_name -> google.protobuf.Struct
	8, // 2: vanasheetpb.AppendRowResponse.row:type_name -> google.protobuf.Struct
	0, // 3: vanasheetpb.RawReadQueryResponse.rows:type_name -> vanasheetpb.RawRow
	0, // 4: vanasheetpb.RawAppendRowsRequest.rows:type_name -> vanasheetpb.RawRow
	0, // 5: vanasheetpb.RawAppendRowsResponse.rows:type_name -> vanasheetpb.RawRow
	3, // 6: vanasheetpb.Vanasheet.RawReadQuery:input_type -> vanasheetpb.RawReadQueryRequest
	5, // 7: vanasheetpb.Vanasheet.RawAppendRows:input_type -> vanasheetpb.RawAppendRowsRequest
	1, // 8: vanasheetpb.Vanasheet.AppendRow:input_type -> vanasheetpb.AppendRowRequest
	4, // 9: vanasheetpb.Vanasheet.RawReadQuery:output_type -> vanasheetpb.RawReadQueryResponse
	6, // 10: vanasheetpb.Vanasheet.RawAppendRows:output_type -> vanasheetpb.RawAppendRowsResponse
	2, // 11: vanasheetpb.Vanasheet.AppendRow:output_type -> vanasheetpb.AppendRowResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_vanasheet_proto_init() }
func file_vanasheet_proto_init() {
	if File_vanasheet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vanasheet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawReadQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawReadQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawAppendRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vanasheet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawAppendRowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vanasheet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vanasheet_proto_goTypes,
		DependencyIndexes: file_vanasheet_proto_depIdxs,
		MessageInfos:      file_vanasheet_proto_msgTypes,
	}.Build()
	File_vanasheet_proto = out.File
	file_vanasheet_proto_rawDesc = nil
	file_vanasheet_proto_goTypes = nil
	file_vanasheet_proto_depIdxs = nil
}
